name: Publish VSCode Extension

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Package VSCode extension
        run: vsce package

      - name: Extract version from package.json
        id: get_version
        run: |
          VERSION=$(node -p 'require("./package.json").version')
          if [ -z "$VERSION" ]; then
            echo "ERROR: Failed to extract version from package.json"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Log version from package.json
        run: |
          echo "Extracted version: ${{ steps.get_version.outputs.version }}"

      - name: Create and push tag
        run: |
          echo "Creating and pushing tag: ${{ steps.get_version.outputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.get_version.outputs.version }}
          git push origin ${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # pin to immutable version
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: VSCode Extension Release
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log VSIX files
        run: |
          ls -lh *.vsix || echo "ERROR: No VSIX files found"

      - name: Wait for GitHub Release to be ready
        run: |
          echo "Waiting for GitHub Release/tag to be ready..."
          sleep 10

      - name: Upload VSIX to Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # pin to immutable version
        with:
          files: "*.vsix"
          tag_name: ${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
