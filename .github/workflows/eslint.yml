# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# ESLint is a tool for identifying and reporting on patterns
# found in ECMAScript/JavaScript code.
# More details at https://github.com/eslint/eslint
# and https://eslint.org

name: ESLint

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  eslint:
    name: Run ESLint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies and generate lock file
        run: |
          if [ -f package-lock.json ]; then
            echo "Lock file exists, using npm ci"
            npm ci
          else
            echo "No lock file found, using npm install to generate it"
            npm install
          fi

      - name: Install SARIF formatter
        run: npm install --save-dev @microsoft/eslint-formatter-sarif

      - name: Run ESLint
        run: |
          npx eslint . \
            --ext .js,.jsx,.ts,.tsx \
            --format @microsoft/eslint-formatter-sarif \
            --output-file eslint-results.sarif
        continue-on-error: true

      - name: Check if SARIF file exists
        run: |
          if [ -f eslint-results.sarif ]; then
            echo "SARIF file exists"
            ls -la eslint-results.sarif
          else
            echo "SARIF file does not exist, creating empty one"
            echo '{"version":"2.1.0","runs":[{"tool":{"driver":{"name":"ESLint"}},"results":[]}]}' > eslint-results.sarif
          fi

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
        if: always()
